// Project mixins
//////////////////////////////////////////////////////
//////////////////////////////////////////////////////
//////////////////////////////////////////////////////

// Media
//////////////////////////////////////////////////////
// Брекпоинты - смотреть в _variables.scss

@mixin xs {
  @media (max-width: $breackpoint_xs_max) {
    @content;
  }
}

@mixin not-xs {
  @media (min-width: $breackpoint_sm) {
    @content;
  }
}


// Size )
@mixin size($width, $height) {
  width: $width;
  height: $height;
}


// Elements
//////////////////////////////////////////////////////

// Примесь для покраски ссылок
@mixin link-style($color, $color-hover) {
  @include transition(color);

  &,
  &:focus {
    color: $color;
  }

  &:hover,
  &:active {
    color: $color-hover;
  }

  @include sm-and-xs {
    &,
    &:hover,
    &:focus {
      color: $color;
    }

    &:active {
      color: $color-hover;
    }
  }
}


// Effects
//////////////////////////////////////////////////////

// Multi-transition
// Pass in any number of transitions
@mixin transition($transitions...) {
  $unfoldedTransitions: ();

  @each $transition in $transitions {
    $unfoldedTransitions: append($unfoldedTransitions, unfoldTransition($transition), comma);
  }

  transition: $unfoldedTransitions;
}

@function unfoldTransition($transition) {
  // Default values
  $property: all;
  $duration: $transition_duration;
  $easing: $transition_timing-function;
  $delay: $transition_delay;
  $defaultProperties: ($property, $duration, $easing, $delay);

  // Grab transition properties if they exist
  $unfoldedTransition: ();

  @for $i from 1 through length($defaultProperties) {
    $p: null;

    @if $i <= length($transition) {
      $p: nth($transition, $i);
    } @else {
      $p: nth($defaultProperties, $i);
    }
    $unfoldedTransition: append($unfoldedTransition, $p);
  }

  @return $unfoldedTransition;
}
